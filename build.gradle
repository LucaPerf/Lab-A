//Use application and OpenJFX plugin
plugins
        {
            id 'application'
            id "com.github.johnrengelman.shadow" version "7.0.0"
        }

//Where the class with the main method is
mainClassName = 'com.lab.centrivaccinali.Launcher'
//Needed to fix JFoenix TextField errors
applicationDefaultJvmArgs = ["--add-opens=java.base/java.lang.reflect=ALL-UNNAMED"]

//Maven repository to download dependencies from
repositories
        {
            mavenCentral()
        }

//Dependencies
dependencies
        {
            implementation 'com.jfoenix:jfoenix:9.0.10'
            implementation group: 'org.simpleflatmapper', name: 'sfm-csv', version: '8.2.3'
            implementation group: 'org.simpleflatmapper', name: 'lightning-csv', version: '8.2.3'
            implementation group: 'org.kordamp.ikonli', name: 'ikonli-javafx', version: '12.2.0'
            implementation group: 'org.kordamp.ikonli', name: 'ikonli-material2-pack', version: '12.2.0'
            implementation("com.google.guava:guava:30.1.1-jre")
            //JavaFX dependencies
            implementation group: 'org.openjfx', name: 'javafx-graphics', version: 16, classifier: 'linux'
            implementation group: 'org.openjfx', name: 'javafx-graphics', version: 16, classifier: 'mac'
            implementation group: 'org.openjfx', name: 'javafx-graphics', version: 16, classifier: 'win'
            implementation group: 'org.openjfx', name: 'javafx-fxml', version: 16, classifier: 'win'
            implementation group: 'org.openjfx', name: 'javafx-fxml', version: 16, classifier: 'linux'
            implementation group: 'org.openjfx', name: 'javafx-fxml', version: 16, classifier: 'mac'
            implementation group: 'org.openjfx', name: 'javafx-controls', version: 16, classifier: 'linux'
            implementation group: 'org.openjfx', name: 'javafx-controls', version: 16, classifier: 'win'
            implementation group: 'org.openjfx', name: 'javafx-controls', version: 16, classifier: 'mac'
            implementation group: 'org.openjfx', name: 'javafx-base', version: 16, classifier: 'mac'
            implementation group: 'org.openjfx', name: 'javafx-base', version: 16, classifier: 'linux'
            implementation group: 'org.openjfx', name: 'javafx-base', version: 16, classifier: 'win'
        }

//Needed by icons
shadowJar
        {
            mergeServiceFiles()
        }

//Customize shadow dist task
shadowDistZip
        {
            archiveBaseName.set(project.name)

            //Copy scripts to root folder
            into(project.name)
                    {
                        from 'build/scriptsShadow'
                    }

            //Copy jars to bin
            into(project.name + '/bin')
                    {
                        from 'build/libs'
                    }
            //Copy files required by project specifications
            into(project.name) {
                from '.'
                include 'doc/*'
                include('License.txt')
                include('autori.txt')
            }
            //Copy source code into src
            into(project.name + '/src')
                    {
                        from '.'
                        include 'src/**'
                        include('.gitignore')
                        include('build.gradle')
                        include('settings.gradle')
                    }

            //Remove duplicate scripts file in bin folder
            eachFile { file ->
                //Exclude /lib contents
                if (file.path.contains('lib'))
                    file.exclude()
                //Exclude old scripts
                if (file.getName() == project.name && file.path.contains('bin'))
                    file.exclude()
                else if (file.getName() == (project.name + '.bat') && file.path.contains('bin'))
                    file.exclude()
            }
        }

//Set non default APP_HOME and jar folder in scripts
startShadowScripts
        {
            doLast {
                //Needed because scripts are in the root directory
                windowsScript.text = windowsScript.text.replace('set APP_HOME=%DIRNAME%..', 'set APP_HOME=%DIRNAME%')
                unixScript.text = unixScript.text.replace('cd "`dirname \\"$PRG\\"`/.." >/dev/null', 'cd "`dirname \\"$PRG\\"`" >/dev/null')
                //Needed because jars are int /bin instead of /lib
                windowsScript.text = windowsScript.text.replace('set CLASSPATH=%APP_HOME%\\lib\\VaccinOK-all.jar', 'set CLASSPATH=%APP_HOME%\\bin\\VaccinOK-all.jar')
                unixScript.text = unixScript.text.replace('CLASSPATH=$APP_HOME/lib/VaccinOK-all.jar', 'CLASSPATH=$APP_HOME/bin/VaccinOK-all.jar')
            }
        }
